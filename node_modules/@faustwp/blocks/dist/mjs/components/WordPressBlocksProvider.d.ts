import React, { FC } from 'react';
export declare type WordPressBlockBase = React.FC & {
    displayName: string;
    name: string;
    config: {
        name: string;
    };
};
/**
 * WordPressBlock is a React component that contains some optional properties that we are
 * used to match it with equivalent block data from the API
 */
export declare type WordPressBlock<P = Record<string, any>> = FC<P> & Partial<Pick<WordPressBlockBase, 'config' | 'displayName' | 'name'>>;
export declare const WordPressBlocksContext: React.Context<WordPressBlocksContextType>;
export interface WordPressBlocksContextType {
    blocks?: WordPressBlock[];
}
/**
 * WordPressBlocksProvider is used as a central store for the available list of WordPressBlock types.
 * @param props
 * @returns
 */
export declare function WordPressBlocksProvider(props: {
    children: React.ReactNode;
    config: WordPressBlocksContextType;
}): JSX.Element;
